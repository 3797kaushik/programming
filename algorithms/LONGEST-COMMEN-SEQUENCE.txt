import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
public class Solution {
    public static int max(int a,int b)
        {
        return a>b?a:b;
    }
    public static int longestCommon(char[] X,char[] Y,int m,int n)
        {
        int L[][]=new int[m+1][n+1];
         int i, j;

       for (i=0; i<=m; i++)
       {
         for (j=0; j<=n; j++)
         {
           if (i == 0 || j == 0)
           {L[i][j] = 0;
            continue;
           }
           if (X[i-1] == Y[j-1])
             L[i][j] = L[i-1][j-1] + 1;
           else
             L[i][j] = max(L[i-1][j], L[i][j-1]);
         }
        }
      return L[m][n];
     }
    public static int numberNeeded(String first, String second) {
      int a=longestCommon(first.toCharArray(),second.toCharArray(),first.length(),second.length());
        return first.length()+second.length()-2*a;
    }
  
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a = in.next();
        String b = in.next();
        System.out.println(numberNeeded(a, b));
    }
}
